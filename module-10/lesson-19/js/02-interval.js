/* ======================================================================================================================
Метод setInterval(callback, delay, args)
====================================================================================================================== */

/*Синтаксис у setInterval такий самий як і у setTimeout,
але працює він трішки інакше.
Але на відміну від setTimeout, який запускає функцію 
лише один раз із затримкою, setInterval буде запускати
функцію постійно з певним інтервалом, тобто у нашому випадку,
кожні дві секунди буде відпрацьовувати колбек функція  
*/

// setInterval(() => {
//   console.log("ok");
  
// }, 2000);

// ---------------

/*Так само, як і з setTimeout, функцію, яка
буде відпрацьовувати, ми можемо створити ззовні.
Якщо у функцію logger треба передати якісь дані,
які ми хочемо в тілі функції використати, ми 
можемо їх задати, як аргументи під час виклику
setInterval. 
Якщо їх декілька, то зручніше використовувати 
патерн, якйй називається обєкт параметрів.
*/ 

// const logger = ({ time, name }) => {
//   console.log(`logger ${time} ${name}`);
// }

// setInterval(logger, 1500, { time: "1.5s", name: "Alice" });


/* ======================================================================================================================
Очищення інтервалу за допомогою clearInterval(intervalId)
====================================================================================================================== */

/*Якщо є необхідність зупинити наш інтервал, 
то setInterval повертає під час виклику унікальний
ідентифікатор, який можна зберегти в змінну, 
для того, щоб потім використати в методі clearInterval()*/ 

// const logger = ({ time, name }) => {
//   console.log(`logger ${time} ${name}`);
// }

// const intId = setInterval(logger, 1500, { time: "1.5s", name: "Alice" });
// setTimeout(() => {
//   clearInterval(intId);
// }, 6000); 
// // setInterval відпрацює 4 рази, 
// // потім clearInterval зупинить виконання